pal4<- c("#dfd885", "#aba7cf", "#7fd4b6", "#e79899")
pal5<- c("#dfd885", "#aba7cf", "#7fd4b6", "#e79899", "#9ebcda")
pal6<- c("#dfd885", "#aba7cf", "#7fd4b6", "#e79899", "#9ebcda", "#E8BF99")
source("loaddata.R")
install.packages("mapview")
knitr::opts_chunk$set(echo = TRUE)
# Load Libraries
# install.packages("tidyverse")
library(rlang)
library(nnet)
library(dplyr)
library(tidyr)
library(lubridate, warn.conflicts = FALSE)
library(kableExtra)
library(RColorBrewer)
library(ggthemes)
library(data.table)
library(ggplot2)
library(raster)
library(sf)
library(janitor)
library(caret)
library(knitr)
library(pscl)
library(plotROC)
library(pROC)
library(ROCR)
library(grid)
library(gridExtra)
library(stargazer)
library(ggcorrplot)
library(DataExplorer)
library(mapsapi)
library(leaflet)
require(tidyr)
library(xml2)
library(htmltools)
library (tidymodels)
library(viridis)
### AUC plot function
fun.aucplot <- function(pred, obs, title){
# Run the AUC calculations
ROC_perf <- performance(prediction(pred,obs),"tpr","fpr")
ROC_sens <- performance(prediction(pred,obs),"sens","spec")
ROC_auc <- performance(prediction(pred,obs),"auc")
# Spawn a new plot window (Windows OS)
graphics.off(); x11(h=6,w=6)
# Plot the curve
plot(ROC_perf,colorize=T,print.cutoffs.at=seq(0,1,by=0.1),lwd=3,las=1,main=title)
abline(a=0,b=1)
# Add some statistics to the plot
text(1,0.15,labels=paste("AUC = ",round(ROC_auc@y.values[[1]],digits=2),sep=""),adj=1)
}
options(scipen=999)
options(tigris_class = "sf")
C = "#8856A7"
B= "#9ebcda"
active<- "#7fd4b6"
pal1<- c("#dfd885", "#aba7cf")
pal3<- c("#dfd885", "#aba7cf", "#7fd4b6")
pal3_ret<- c("#dfd885", "#aba7cf", "#e79899")
pal4<- c("#dfd885", "#aba7cf", "#7fd4b6", "#e79899")
pal5<- c("#dfd885", "#aba7cf", "#7fd4b6", "#e79899", "#9ebcda")
pal6<- c("#dfd885", "#aba7cf", "#7fd4b6", "#e79899", "#9ebcda", "#E8BF99")
source("loaddata.R")
source("loaddata.R")
source("loaddata.R")
pal5<- c("#f3efea", "#e4dde1", "#a797a1", "#8f7b87", "#434343")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
houstonPop00 <-
get_decennial(geography = "tract", variables = "P001001", year = 2000,
state = 48, geometry = TRUE,
county=c("Harris COunty","San Jacinto","Montgomery","Liberty","Waller",
"Austin","Chambers","Fort Bend","Brazoria","Galveston")) %>%
rename(pop_2000 = value) %>%
st_transform(st_crs(houstonMSA_fishnet))
library(tidyverse)
library(sf)
library(raster)
library(knitr)
library(kableExtra)
library(tidycensus)
library(tigris)
library(FNN)
#library(QuantPsyc) # JE Note: in R 4.1, QuantPsyc package not available.
library(caret)
library(yardstick)
library(pscl)
library(plotROC)
library(ggrepel)
library(pROC)
library(grid)
library(gridExtra)
library(viridis)
library(igraph)
plotTheme <- theme(
plot.title =element_text(size=12),
plot.subtitle = element_text(size=8),
plot.caption = element_text(size = 6),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 10),
# Set the entire chart region to blank
panel.background=element_blank(),
plot.background=element_blank(),
#panel.border=element_rect(colour="#F0F0F0"),
# Format the grid
panel.grid.major=element_line(colour="#D0D0D0",size=.75),
axis.ticks=element_blank())
mapTheme <- theme(plot.title =element_text(size=12),
plot.subtitle = element_text(size=8),
plot.caption = element_text(size = 6),
axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_line(colour = 'transparent'),
panel.grid.minor=element_blank(),
legend.direction = "vertical",
legend.position = "right",
plot.margin = margin(1, 1, 1, 1, 'cm'),
legend.key.height = unit(1, "cm"), legend.key.width = unit(0.2, "cm"))
palette2 <- c("#41b6c4","#253494")
palette4 <- c("#a1dab4","#41b6c4","#2c7fb8","#253494")
palette5 <- c("#ffffcc","#a1dab4","#41b6c4","#2c7fb8","#253494")
palette10 <- c("#f7fcf0","#e0f3db","#ccebc5","#a8ddb5","#7bccc4",
"#4eb3d3","#2b8cbe","#0868ac","#084081","#f7fcf0")
houstonMSA_fishnet <-
st_make_grid(houstonMSA, 4000) %>%
st_sf()
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
houstonMSA <-
st_read("https://raw.githubusercontent.com/mafichman/CPLN_675/main/Week_14_15/data/UGB_Chapter_data/houston_MSA.geojson") %>%
st_transform('ESRI:102741') # JE Note: added 'ESRI:' in front of projection
lc_change = raster("https://github.com/mafichman/CPLN_675/raw/main/Week_14_15/data/UGB_Chapter_data/resam4k.tif")
```{r plot_msa, warning= FALSE, message= FALSE}
ggplot() +
geom_sf(data=houstonMSA) +
geom_raster(data=rast(lc_change) %>% na.omit %>% filter(value > 0),
aes(x,y,fill=as.factor(value))) +
scale_fill_viridis(direction = -1, discrete=TRUE, name ="Land Cover\nChange") +
labs(title = "Land Cover Change, 2000-2010") +
mapTheme +
theme(legend.direction="horizontal")
library(tidyverse)
library(sf)
library(raster)
library(knitr)
library(kableExtra)
library(tidycensus)
library(tigris)
library(FNN)
#library(QuantPsyc) # JE Note: in R 4.1, QuantPsyc package not available.
library(caret)
library(yardstick)
library(pscl)
library(plotROC)
library(ggrepel)
library(pROC)
library(grid)
library(gridExtra)
library(viridis)
library(igraph)
plotTheme <- theme(
plot.title =element_text(size=12),
plot.subtitle = element_text(size=8),
plot.caption = element_text(size = 6),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 10),
# Set the entire chart region to blank
panel.background=element_blank(),
plot.background=element_blank(),
#panel.border=element_rect(colour="#F0F0F0"),
# Format the grid
panel.grid.major=element_line(colour="#D0D0D0",size=.75),
axis.ticks=element_blank())
mapTheme <- theme(plot.title =element_text(size=12),
plot.subtitle = element_text(size=8),
plot.caption = element_text(size = 6),
axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_line(colour = 'transparent'),
panel.grid.minor=element_blank(),
legend.direction = "vertical",
legend.position = "right",
plot.margin = margin(1, 1, 1, 1, 'cm'),
legend.key.height = unit(1, "cm"), legend.key.width = unit(0.2, "cm"))
palette2 <- c("#41b6c4","#253494")
palette4 <- c("#a1dab4","#41b6c4","#2c7fb8","#253494")
palette5 <- c("#ffffcc","#a1dab4","#41b6c4","#2c7fb8","#253494")
palette10 <- c("#f7fcf0","#e0f3db","#ccebc5","#a8ddb5","#7bccc4",
"#4eb3d3","#2b8cbe","#0868ac","#084081","#f7fcf0")
ggplot() +
geom_sf(data=houstonMSA) +
geom_raster(data=rast(lc_change) %>% na.omit %>% filter(value > 0),
aes(x,y,fill=as.factor(value))) +
scale_fill_viridis(direction = -1, discrete=TRUE, name ="Land Cover\nChange") +
labs(title = "Land Cover Change, 2000-2010") +
mapTheme +
theme(legend.direction="horizontal")
houstonMSA <-
st_read("https://raw.githubusercontent.com/mafichman/CPLN_675/main/Week_14_15/data/UGB_Chapter_data/houston_MSA.geojson") %>%
st_transform('ESRI:102741') # JE Note: added 'ESRI:' in front of projection
lc_change = raster("https://github.com/mafichman/CPLN_675/raw/main/Week_14_15/data/UGB_Chapter_data/resam4k.tif")
View(lc_change)
library(gdal)
library(rgdal)
library(pROC)
library(rgdal)
ggplot() +
geom_sf(data=houstonMSA) +
geom_raster(data=rast(lc_change) %>% na.omit %>% filter(value > 0),
aes(x,y,fill=as.factor(value))) +
scale_fill_viridis(direction = -1, discrete=TRUE, name ="Land Cover\nChange") +
labs(title = "Land Cover Change, 2000-2010") +
mapTheme +
theme(legend.direction="horizontal")
ggplot() +
geom_sf(data=houstonMSA) +
geom_raster(data=rast(lc_change) %>% na.omit %>% filter(value > 0),
aes(x,y,fill=as.factor(value))) +
scale_fill_viridis(direction = -1, discrete=TRUE, name ="Land Cover\nChange") +
labs(title = "Land Cover Change, 2000-2010") +
mapTheme +
theme(legend.direction="horizontal")
#this function converts a column in to quintiles. It is used for mapping.
quintileBreaks <- function(df,variable) {
as.character(quantile(df[[variable]],
c(.01,.2,.4,.6,.8),na.rm=T))
}
#This function can be used to convert a polygon sf to centroids xy coords.
xyC <- function(aPolygonSF) {
as.data.frame(
cbind(x=st_coordinates(st_centroid(aPolygonSF))[,1],
y=st_coordinates(st_centroid(aPolygonSF))[,2]))
}
#this function convert a raster to a data frame so it can be plotted in ggplot
rast <- function(inRaster) {
data.frame(
xyFromCell(inRaster, 1:ncell(inRaster)),
value = getValues(inRaster)) }
ggplot() +
geom_sf(data=houstonMSA) +
geom_raster(data=rast(lc_change) %>% na.omit %>% filter(value > 0),
aes(x,y,fill=as.factor(value))) +
scale_fill_viridis(direction = -1, discrete=TRUE, name ="Land Cover\nChange") +
labs(title = "Land Cover Change, 2000-2010") +
mapTheme +
theme(legend.direction="horizontal")
library(tidyverse)
library(sf)
library(raster)
library(knitr)
library(kableExtra)
library(tidycensus)
library(tigris)
library(FNN)
#library(QuantPsyc) # JE Note: in R 4.1, QuantPsyc package not available.
library(caret)
library(yardstick)
library(pscl)
library(plotROC)
library(ggrepel)
library(pROC)
library(rgdal)
library(grid)
library(gridExtra)
library(viridis)
library(igraph)
plotTheme <- theme(
plot.title =element_text(size=12),
plot.subtitle = element_text(size=8),
plot.caption = element_text(size = 6),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 10),
# Set the entire chart region to blank
panel.background=element_blank(),
plot.background=element_blank(),
#panel.border=element_rect(colour="#F0F0F0"),
# Format the grid
panel.grid.major=element_line(colour="#D0D0D0",size=.75),
axis.ticks=element_blank())
mapTheme <- theme(plot.title =element_text(size=12),
plot.subtitle = element_text(size=8),
plot.caption = element_text(size = 6),
axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_line(colour = 'transparent'),
panel.grid.minor=element_blank(),
legend.direction = "vertical",
legend.position = "right",
plot.margin = margin(1, 1, 1, 1, 'cm'),
legend.key.height = unit(1, "cm"), legend.key.width = unit(0.2, "cm"))
palette2 <- c("#41b6c4","#253494")
palette4 <- c("#a1dab4","#41b6c4","#2c7fb8","#253494")
palette5 <- c("#ffffcc","#a1dab4","#41b6c4","#2c7fb8","#253494")
palette10 <- c("#f7fcf0","#e0f3db","#ccebc5","#a8ddb5","#7bccc4",
"#4eb3d3","#2b8cbe","#0868ac","#084081","#f7fcf0")
ggplot() +
geom_sf(data=houstonMSA) +
geom_raster(data=rast(lc_change) %>% na.omit %>% filter(value > 0),
aes(x,y,fill=as.factor(value))) +
scale_fill_viridis(direction = -1, discrete=TRUE, name ="Land Cover\nChange") +
labs(title = "Land Cover Change, 2000-2010") +
mapTheme +
theme(legend.direction="horizontal")
austinMSA <-
st_read("https://data.texas.gov/resource/sw7f-2kkd.json")%>%
st_transform('ESRI:102741')
austinMSA <-
st_read("https://data.texas.gov/resource/sw7f-2kkd.json")%>%
st_transform('ESRI:102741')
install.packages("jsonlite")
install.packages("jsonlite")
library("jsonlite")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
austinMSA <-
jsonlite::fromJSON("https://data.texas.gov/resource/sw7f-2kkd.json")%>%
st_transform('ESRI:102741')
library(tidyverse)
library(sf)
library(raster)
library(knitr)
library(kableExtra)
library(tidycensus)
library(tigris)
library(FNN)
#library(QuantPsyc) # JE Note: in R 4.1, QuantPsyc package not available.
library(caret)
library(yardstick)
library(pscl)
library(plotROC)
library(ggrepel)
library(pROC)
library(rgdal)
library(grid)
library(gridExtra)
library(viridis)
library(igraph)
austinMSA <-
jsonlite::fromJSON("https://data.texas.gov/resource/sw7f-2kkd.json")%>%
st_transform('ESRI:102741')
setwd("~/UpennMUSA/Semester_2/CPLN_675/Urban_Growth_ATX")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
austinMSA <-
st_read('~/UpennMUSA/Semester_2/CPLN_675/Urban_Growth_ATX/Austin_Data/Austin_MSA.geojson')
austinMSA <-
st_read('~/UpennMUSA/Semester_2/CPLN_675/Urban_Growth_ATX/Austin_Data/Austin_MSA.geojson')%>%
st_transform('ESRI:102741')
View(austinMSA)
Austin_county<- c("Williamson", "Travis","Bastrop", "Caldwell", "Hays")
austinMSA <-
st_read('~/UpennMUSA/Semester_2/CPLN_675/Urban_Growth_ATX/Austin_Data/Austin_MSA.geojson')%>%
st_transform('ESRI:102741')%>%
filter(name %in% Austin_county)
austinMSA <-
st_read('~/UpennMUSA/Semester_2/CPLN_675/Urban_Growth_ATX/Austin_Data/Austin_MSA.geojson')%>%
st_transform('ESRI:102741')%>%
filter(name %in% Austin_county)%>%st_union()
plot(austinMSA)
austinMSA <-
st_read('~/UpennMUSA/Semester_2/CPLN_675/Urban_Growth_ATX/Austin_Data/Austin_MSA.geojson')%>%
st_transform('ESRI:102741')%>%
filter(name %in% Austin_county)
austinMSA <-
st_read('~/UpennMUSA/Semester_2/CPLN_675/Urban_Growth_ATX/Austin_Data/Austin_MSA.geojson')%>%
st_transform('ESRI:102741')%>%
filter(name %in% Austin_county)%>%
st_union()%>%mutate(name = Austin_MSA)
austinMSA <-
st_read('~/UpennMUSA/Semester_2/CPLN_675/Urban_Growth_ATX/Austin_Data/Austin_MSA.geojson')%>%
st_transform('ESRI:102741')%>%
filter(name %in% Austin_county)%>%
st_union()
austinMSA <-
st_read('~/UpennMUSA/Semester_2/CPLN_675/Urban_Growth_ATX/Austin_Data/Austin_MSA.geojson')%>%
st_transform('ESRI:102741')%>%
filter(name %in% Austin_county)%>%
st_union()%>%cbind(., data.frame(AustinMSA))
austinMSA <-
st_read('~/UpennMUSA/Semester_2/CPLN_675/Urban_Growth_ATX/Austin_Data/Austin_MSA.geojson')%>%
st_transform('ESRI:102741')%>%
filter(name %in% Austin_county)%>%
st_union()%>%cbind(., data.frame("AustinMSA"))
austinMSA
austinMSA <-
st_read('~/UpennMUSA/Semester_2/CPLN_675/Urban_Growth_ATX/Austin_Data/Austin_MSA.geojson')%>%
st_transform('ESRI:102741')%>%
filter(name %in% Austin_county)%>%
st_union()%>%cbind(., data.frame("AustinMSA"))%>%
rename(name = X.AustinMSA.)
st_area(austinMSA)
houstonMSA <-
st_read("https://raw.githubusercontent.com/mafichman/CPLN_675/main/Week_14_15/data/UGB_Chapter_data/houston_MSA.geojson") %>%
st_transform('ESRI:102741') # JE Note: added 'ESRI:' in front of projection
View(houstonMSA)
AustinPop_19 <-
get_decennial(geography = "tract", variables = "P001001", year = 2019,
state = 48, geometry = TRUE,
county=Austin_county)
AustinPop_09 <-
get_decennial(geography = "tract", variables = "P001001", year = 2009,
state = 48, geometry = TRUE,
county=c("Williamson", "Travis","Bastrop", "Caldwell", "Hays"))
?get_acs
vars <- load_variables(year = 2013,
dataset = "acs5",
cache = TRUE)
View(vars)
vars <- load_variables(year = 2009,
dataset = "acs5",
cache = TRUE)
AustinPop_09 <-
get_acs(geography = "tract", variables = "B01003_001", year = 2009,
state = 48, geometry = TRUE,
county=c("Williamson", "Travis","Bastrop", "Caldwell", "Hays"))
View(AustinPop_09)
AustinPop_09 <-
get_acs(geography = "tract", variables = "B01003_001", year = 2009,
state = 48, geometry = TRUE,
county=c("Williamson", "Travis","Bastrop", "Caldwell", "Hays")) %>%
rename(pop_2009 = value)
AustinPop_09 <-
get_acs(geography = "tract", variables = "B01003_001", year = 2009,
state = 48, geometry = TRUE,
county=c("Williamson", "Travis","Bastrop", "Caldwell", "Hays"))
AustinPop_09 <-
get_acs(geography = "tract", variables = "B01003_001", year = 2009,
state = 48, geometry = TRUE,
county=c("Williamson", "Travis","Bastrop", "Caldwell", "Hays")) %>%
dplyr::select( -NAME, -moe) %>%
spread(variable, estimate)
austinMSA_fishnet <-
st_make_grid(austinMSA, 4000) %>%
st_sf()
austinMSA_fishnet <-
st_make_grid(sf(austinMSA), 4000) %>%
st_sf()
austinMSA_fishnet <-
st_make_grid(st_sf(austinMSA), 4000) %>%
st_sf()
austinMSA_fishnet <-
austinMSA_fishnet[austinMSA,]
View(austinMSA_fishnet)
plot(austinMSA_fishnet)
austinMSA_fishnet <-
austinMSA_fishnet[austinMSA,]
austinMSA <-
st_read('~/UpennMUSA/Semester_2/CPLN_675/Urban_Growth_ATX/Austin_Data/Austin_MSA.geojson')%>%
st_transform('ESRI:102741')%>%
filter(name %in% Austin_county)%>%
st_union()
austinMSA_fishnet <-
st_make_grid(st_sf(austinMSA), 4000) %>%
st_sf()
plot(austinMSA_fishnet)
austinMSA_fishnet <-
austinMSA_fishnet[austinMSA,]
plot(austinMSA_fishnet)
austinMSA <-
st_read('~/UpennMUSA/Semester_2/CPLN_675/Urban_Growth_ATX/Austin_Data/Austin_MSA.geojson')%>%
st_transform('ESRI:102741')%>%
filter(name %in% Austin_county)%>%
st_union()
austinMSA_fishnet <-
st_make_grid(st_sf(austinMSA), 4000) %>%
st_sf()
austinMSA_fishnet <-
austinMSA_fishnet[austinMSA,]
plot(austinMSA_fishnet)
ggplot() +
geom_sf(data=austinMSA_fishnet) +
labs(title="Fishnet, 4000 Foot Resolution") +
mapTheme
View(lc_change)
ggplot() +
geom_sf(data=austinMSA) +
geom_raster(data=rast(lc_change) %>% na.omit %>% filter(value > 0),
aes(x,y,fill=as.factor(value))) +
scale_fill_viridis(direction = -1, discrete=TRUE, name ="Land Cover\nChange") +
labs(title = "Land Cover Change, 2000-2010") +
mapTheme +
theme(legend.direction="horizontal")
st_write(austinMSA, "austinMSA.shp")
austinMSA
austinMSA2 <-
st_read('~/UpennMUSA/Semester_2/CPLN_675/Urban_Growth_ATX/Austin_Data/Austin_MSA.geojson')%>%
filter(name %in% Austin_county)%>%
st_union()
austinMSA2
austinMSA2 <- austinMSA2%>%
st_transform('EPSG:4326')
austinMSA2
st_write(austinMSA2, "austinMSA2.shp")
